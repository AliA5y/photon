name: Photon Nightly

on:
  push:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  build_ubuntu:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable

      - name: Build Linux App
        run: flutter build linux --release --dart-define=APP_NAME=photon-nightly

      - name: Archive Linux App
        run: tar czf app.tar.gz build/linux/x64/release/bundle/

      - name: Set Variables
        id: set-vars
        run: |
          echo "::set-output name=prerelease::${{ github.event_name != 'release' }}"
          echo "::set-output name=release_name::${{ github.event.release.name || 'Development Build' }}"
          echo "::set-output name=tag::${{ github.event.release.tag_name || 'nightly' }}"

      - name: Upload Release
        uses: svenstaro/upload-release-action@latest
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: app.tar.gz
          prerelease: ${{ steps.set-vars.outputs.prerelease }}
          release_name: ${{ steps.set-vars.outputs.release_name }}
          tag: ${{ steps.set-vars.outputs.tag }}
          overwrite: true


#   build_android:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: subosito/flutter-action@v2
#         with:
#           cache: true
#           token: ${{secrets.TOKEN}} 
#       - run: |
#           sudo apt-get update -y
#           sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev make python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace fuse

#       - run: |
#           flutter pub get
#           flutter build apk

#       - name: rename
#         if: ${{ github.event_name != 'release' }}
#         run: mv build/app/outputs/apk/release/app-* build/app/outputs/apk/release/photon-android-nightly.apk
#       - uses: svenstaro/upload-release-action@latest
#         with:
#           repo_token: ${{ secrets.TOKEN }}
#           file: build/app/outputs/apk/release/photon-*
#           file_glob: true
#           prerelease: ${{ github.event_name != 'release' }}
#           release_name: ${{ github.event_name == 'release' && github.event.release.name || 'Development Build' }}
#           tag: ${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}
#           overwrite: true

  build_windows:
    name: Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup flutter
        uses: subosito/flutter-action@master
        with:
          channel: stable

      - name: Enable desktop support
        run: flutter config --enable-windows-desktop

      - name: Build Flutter app
        run: flutter build windows
        
      - name: Copy dlls to build 
        run : cp -r assets/dll/vcruntime140*.dll build/windows/runner/Release        

      - run: cp -r build/windows/runner/Release photon-windows-exe
      - run: tar.exe -a -c -f photon-windows-${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}.zip photon-windows-exe

      - run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" "photon_inst.iss"
        shell: cmd
      - run: cp Output/* ./photon-windows-${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}.exe

      - uses: svenstaro/upload-release-action@latest
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: photon-windows-*
          file_glob: true
          prerelease: ${{ github.event_name != 'release' }}
          release_name: ${{ github.event_name == 'release' && github.event.release.name || 'Development Build' }}
          tag: ${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}
          overwrite: true

  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          token: ${{secrets.TOKEN}} 
      - run: flutter config --enable-macos-desktop
      - run: flutter pub get
      - run: flutter build macos
      - run: du -sh build/macos/Build/Products/Release/photon.app
      - run: npm install -g appdmg
      - run: appdmg photondmg.json build/photon-macos-x86_64.dmg
 
      - uses: svenstaro/upload-release-action@latest
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: build/photon-macos-x86_64.dmg
          file_glob: true
          prerelease: ${{ github.event_name != 'release' }}
          release_name: ${{ github.event_name == 'release' && github.event.release.name || 'Development Build' }}
          tag: ${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}
          overwrite: true

#   build_ios:
#     runs-on: macos-latest
#     steps:
#     - uses: actions/checkout@v3
#     - uses: subosito/flutter-action@v2
#       with:
#         channel: 'stable'
#         architecture: x64
#     - run: flutter pub get
#     - run: flutter build ipa --release --no-codesign
#     - uses: actions/upload-artifact@v2 
#       with:
#         name: Photon-iOS-Bundle
#         token: ${{secrets.TOKEN}}
#         path: |
#           build/ios/ipa/*.ipa
